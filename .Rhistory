prod(runif(3, 0, 0.2))
rbinom(1, 1, prod(runif(3, 0, 0.2)))
replicate(1e6, rbinom(1, 1, 1e-3))
sum(replicate(1e6, rbinom(1, 1, 1e-3)))
replicate(100, sum(replicate(1e4, rbinom(1, 1, 1e-2))))
hist(replicate(1000, sum(replicate(1e4, rbinom(1, 1, 1e-2)))))
hist(replicate(1000, sum(replicate(1e4, rbinom(1, 1, prod(runif(2, 0, 0.2)))))))
install.packages(c("checkmate", "gert", "jsonlite", "lamW", "Matrix", "mets", "ordinal", "RcppArmadillo", "V8", "vctrs", "xml2"))
install.packages(c("checkmate", "lamW", "Matrix", "rstpm2", "vctrs"))
remove.packages("checkmate")
install.packages("checkmate")
install.packages(c("lamW", "Matrix", "vctrs"))
remove.packages("vctrs")
install.packages("vctrs")
install.packages("Matrix")
remove.packages("Matrix")
install.packages("Matrix")
data("randu")
randu <- as.matrix(randu)
head(randu)
hist(randu)
plot(randu[,"x"], randu[,"y"])
plot(randu[,"x"], randu[,"z"])
plot(randu[,"y"], randu[,"z"])
GGally::ggpairs(as.data.frame(randu))
scatterplot3d::scatterplot3d(randu[,"x"], randu[,"y"], randu[,"z"])
rgl::plot3d(randu[,"x"], randu[,"y"], randu[,"z"])
projfun <- function(alpha, beta, gamma) {
alpha <- alpha / 180 * pi
beta <- beta / 180 * pi
gamma <- gamma / 180 * pi
Rz <- matrix(c(cos(alpha), sin(alpha), 0, -sin(alpha),
cos(alpha), 0, 0, 0, 1), 3)
Ry <- matrix(c(cos(beta), 0, -sin(beta), 0, 1, 0, sin(beta), 0, cos(beta)), 3)
Rx <- matrix(c(1, 0, 0, 0, cos(gamma), sin(gamma), 0, -sin(gamma), cos(gamma)), 3)
R <- Rz %*% Ry %*% Rx
t((R %*% t(randu))[1:2,])
}
head(projfun(0, 0, 0))
plot(projfun(0, 0, 0))
plot(projfun(35, 345, 35))
energy::dcor(projfun(0, 0, 0)[,1], projfun(0, 0, 0)[,2])
energy::dcor(projfun(32, 340, 32)[,1], projfun(32, 340, 32)[,2])
pargrid <- expand.grid(alpha = seq(0, 360, 10), beta = seq(0, 360, 10),
gamma = seq(0, 360, 10))
projdc <- function(x) {
projcoord <- projfun(x["alpha"], x["beta"], x["gamma"])
plot(projcoord)
# Sys.sleep(0.2)
energy::dcor(projcoord[,1], projcoord[,2])
}
apply(pargrid[1:100,], 1, projdc)
projdc <- function(x, menoseg = TRUE) {
projcoord <- projfun(x["alpha"], x["beta"], x["gamma"])
if(menoseg) {
plot(projcoord)
Sys.sleep(0.1)
}
energy::dcor(projcoord[,1], projcoord[,2])
}
projdc <- function(x, menoseg = FALSE) {
projcoord <- projfun(x["alpha"], x["beta"], x["gamma"])
if(menoseg) {
plot(projcoord)
Sys.sleep(0.1)
}
energy::dcor(projcoord[,1], projcoord[,2])
}
apply(pargrid[1:100,], 1, projdc, menoseg = TRUE)
pargrid$DC <- apply(pargrid, 1, projdc)
pargrid <- expand.grid(alpha = seq(0, 360, 30), beta = seq(0, 360, 30),
gamma = seq(0, 360, 30))
projdc <- function(x, menoseg = FALSE) {
projcoord <- projfun(x["alpha"], x["beta"], x["gamma"])
if(menoseg) {
plot(projcoord)
Sys.sleep(0.1)
}
energy::dcor(projcoord[,1], projcoord[,2])
}
apply(pargrid[1:100,], 1, projdc, menoseg = TRUE)
pargrid$DC <- apply(pargrid, 1, projdc)
max(pargrid$DC)
which.max(pargrid$DC)
pargrid[which.max(pargrid$DC),]
optpar <- pargrid[which.max(pargrid$DC),]
plot(projfun(optpar$alpha, optpar$beta, optpar$gamma))
energy::dcor(projfun(35, 345, 35)[,1], projfun(35, 345, 35)[,2])
plot(projfun(35, 345, 35))
energy::dcor(projfun(35, 345, 35)[,1], projfun(35, 345, 35)[,2])
energy::dcor(projfun(32, 340, 32)[,1], projfun(32, 340, 32)[,2])
optpar
energy::dcor(projfun(240, 270, 90)[,1], projfun(240, 270, 90)[,2])
plot(projfun(optpar$alpha, optpar$beta, optpar$gamma))
energy::dcor
energy::dcov
plot(projfun(35, 345, 35))
energy::dcor(projfun(0, 0, 0)[,1], projfun(0, 0, 0)[,2])
energy::dcor(projfun(32, 340, 32)[,1], projfun(32, 340, 32)[,2])
energy::dcor(projfun(35, 345, 35)[,1], projfun(35, 345, 35)[,2])
energy::dcor(projfun(32, 340, 32)[,1], projfun(32, 340, 32)[,2])
energy::dcor(projfun(35, 345, 35)[,1], projfun(35, 345, 35)[,2])
projfun(32, 340, 32)
plot(projfun(32, 340, 32))
minerva::mine(projfun(0, 0, 0)[, 1], projfun(0, 0, 0)[, 2])$MIC
plot(projfun(0, 0, 0))
plot(projfun(32, 340, 32))
minerva::mine(projfun(32, 340, 32)[, 1], projfun(32, 340, 32)[, 2])$MIC
minerva::mine(projfun(0, 0, 0)[, 1], projfun(0, 0, 0)[, 2])$MIC
minerva::mine(projfun(32, 340, 32)[, 1], projfun(32, 340, 32)[, 2])$MIC
minerva::mine(projfun(35, 345, 35)[, 1], projfun(35, 345, 35)[, 2])$MIC
pargrid <- expand.grid(alpha = seq(0, 360, 10), beta = seq(0, 360, 10),
gamma = seq(0, 360, 10))
pargrid <- expand.grid(alpha = seq(0, 360, 30), beta = seq(0, 360, 30),
gamma = seq(0, 360, 30))
projdc <- function(x, menoseg = FALSE) {
projcoord <- projfun(x["alpha"], x["beta"], x["gamma"])
if(menoseg) {
plot(projcoord)
Sys.sleep(0.1)
}
# -energy::dcor(projcoord[,1], projcoord[,2])
-minerva::mine(projcoord[, 1], projcoord[, 2])$MIC
}
pargrid$DC <- apply(pargrid, 1, projdc)
which.max(pargrid$DC)
optpar <- pargrid[which.min(pargrid$DC),]
plot(projfun(optpar$alpha, optpar$beta, optpar$gamma))
pargrid <- expand.grid(alpha = seq(0, 360, 20), beta = seq(0, 360, 20),
gamma = seq(0, 360, 20))
projdc <- function(x, menoseg = FALSE) {
projcoord <- projfun(x["alpha"], x["beta"], x["gamma"])
if(menoseg) {
plot(projcoord)
Sys.sleep(0.1)
}
# -energy::dcor(projcoord[,1], projcoord[,2])
-minerva::mine(projcoord[, 1], projcoord[, 2])$MIC
}
pargrid <- expand.grid(alpha = seq(0, 360, 10), beta = seq(0, 360, 10),
gamma = seq(0, 360, 10))
projdc <- function(x, menoseg = FALSE) {
projcoord <- projfun(x["alpha"], x["beta"], x["gamma"])
if(menoseg) {
plot(projcoord)
Sys.sleep(0.1)
}
# -energy::dcor(projcoord[,1], projcoord[,2])
-minerva::mine(projcoord[, 1], projcoord[, 2])$MIC
}
pargrid$DC <- apply(pargrid, 1, projdc)
min(pargrid$DC)
which.min(pargrid$DC)
optpar <- pargrid[which.min(pargrid$DC),]
plot(projfun(optpar$alpha, optpar$beta, optpar$gamma))
projfun <- function(alpha, beta, gamma) {
alpha <- alpha / 180 * pi
beta <- beta / 180 * pi
gamma <- gamma / 180 * pi
Rz <- matrix(c(cos(alpha), sin(alpha), 0, -sin(alpha),
cos(alpha), 0, 0, 0, 1), 3)
Ry <- matrix(c(cos(beta), 0, -sin(beta), 0, 1, 0, sin(beta), 0, cos(beta)), 3)
Rx <- matrix(c(1, 0, 0, 0, cos(gamma), sin(gamma), 0, -sin(gamma), cos(gamma)), 3)
R <- Rz %*% Ry %*% Rx
t((R %*% t(randu))[1:2,])
}
plot(projfun(35, 345, 35))
plot(projfun(32, 340, 32))
plot(projfun(35, 345, 35))
optpar
minerva::mine(projfun(0, 0, 0)[, 1], projfun(0, 0, 0)[, 2])$MIC
minerva::mine(projfun(32, 340, 32)[, 1], projfun(32, 340, 32)[, 2])$MIC
minerva::mine(projfun(35, 345, 35)[, 1], projfun(35, 345, 35)[, 2])$MIC
plot(projfun(32, 340, 32))
plot(projfun(35, 345, 35))
350/(180*pi) /pi*180
45/(180*pi) /pi*180
plot(projfun(35, 345, 35))
plot(projfun(35, 5, 35))
30/(180*pi) /pi*180
plot(projfun(35, 5, 3))
plot(projfun(35, 5, 5))
plot(projfun(35, 345, 35))
plot(projfun(35, 345, 35))
energy::dcor(projfun(35, 345, 35)[,1], projfun(35, 345, 35)[,2])
plot(projfun(32, 340, 32))
plot(projfun(35, 345, 35))
?minerva::mine
minerva::mine(projfun(0, 0, 0)[, 1], projfun(0, 0, 0)[, 2])$MIC
minerva::mine(projfun(0, 0, 0)[, 1], projfun(0, 0, 0)[, 2])
list(minerva::mine(projfun(0, 0, 0)[, 1], projfun(0, 0, 0)[, 2]))
str(minerva::mine(projfun(0, 0, 0)[, 1], projfun(0, 0, 0)[, 2]))
optpar <- pargrid[which.min(pargrid$DC),]
plot(projfun(optpar$alpha, optpar$beta, optpar$gamma))
res <- optim(optpar, projcor)
res <- optim(optpar, projdc)
projcoord <- projfun(res$par[["alpha"]], res$par[["beta"]], res$par[["gamma"]])
plot(projcoord)
res
data(randu)
randu <- as.matrix(randu)
plot(randu$x, randu$y)
plot(randu[,"x"], randu[,"y"])
plot(randu[,"x"], randu[,"z"])
plot(randu[,"y"], randu[,"z"])
GGally::ggpairs(as.data.frame(randu))
scatterplot3d::scatterplot3d(randu[,"x"], randu[,"y"], randu[,"z"])
rgl::plot3d(randu[,"x"], randu[,"y"], randu[,"z"])
head(projfun(0, 0, 0))
projfun <- function(alpha, beta, gamma) {
alpha <- alpha / 180 * pi
beta <- beta / 180 * pi
gamma <- gamma / 180 * pi
Rz <- matrix(c(cos(alpha), sin(alpha), 0, -sin(alpha),
cos(alpha), 0, 0, 0, 1), 3)
Ry <- matrix(c(cos(beta), 0, -sin(beta), 0, 1, 0,
sin(beta), 0, cos(beta)), 3)
Rx <- matrix(c(1, 0, 0, 0, cos(gamma), sin(gamma), 0,
-sin(gamma), cos(gamma)), 3)
R <- Rz %*% Ry %*% Rx
t((R %*% t(randu))[1:2,])
}
head(projfun(0, 0, 0))
plot(projfun(0, 0, 0))
plot(projfun(35, 345, 35))
plot(projfun(32, 340, 32))
manipulate::manipulate(plot(projfun(alpha, beta, gamma)), alpha = manipulate::slider(0, 360),
beta = manipulate::slider(0, 360), gamma = manipulate::slider(0, 360))
energy::dcor(projfun(0, 0, 0)[,1], projfun(0, 0, 0)[,2])
plot(projfun(0, 0, 0))
plot(projfun(35, 345, 35))
energy::dcor(projfun(32, 340, 32)[,1], projfun(32, 340, 32)[,2])
energy::dcor(projfun(35, 345, 35)[,1], projfun(35, 345, 35)[,2])
minerva::mine(projfun(0, 0, 0)[, 1], projfun(0, 0, 0)[, 2])$MIC
minerva::mine(projfun(32, 340, 32)[, 1], projfun(32, 340, 32)[, 2])$MIC
minerva::mine(projfun(35, 345, 35)[, 1], projfun(35, 345, 35)[, 2])$MIC
energy::dcor(projfun(0, 0, 0)[,1], projfun(0, 0, 0)[,2])
energy::dcor(projfun(35, 345, 35)[,1], projfun(35, 345, 35)[,2])
plot(projfun(0, 0, 0))
plot(projfun(32, 340, 32))
plot(projfun(35, 345, 35))
energy::dcor(projfun(0, 0, 0)[,1], projfun(0, 0, 0)[,2])
energy::dcor(projfun(32, 340, 32)[,1], projfun(32, 340, 32)[,2])
energy::dcor(projfun(35, 345, 35)[,1], projfun(35, 345, 35)[,2])
minerva::mine(projfun(0, 0, 0)[, 1], projfun(0, 0, 0)[, 2])$MIC
minerva::mine(projfun(32, 340, 32)[, 1], projfun(32, 340, 32)[, 2])$MIC
minerva::mine(projfun(35, 345, 35)[, 1], projfun(35, 345, 35)[, 2])$MIC
pargrid <- expand.grid(alpha = seq(0, 360, 10), beta = seq(1, 360, 10), gamma = c(0, 360, 10))
projMIC <- function(x, menoseg = FALSE) {
projcoord <- projfun(x["alpha"], x["beta"], x["gamma"])
if(menoseg) {
plot(projcoord)
Sys.sleep(0.1)
}
-minerva::mine(projcoord[, 1], projcoord[, 2])$MIC
}
apply(pargrid[1:100,], 1, projdc, menoseg = TRUE)
apply(pargrid[1:50,], 1, projdc, menoseg = TRUE)
apply(pargrid[1:30,], 1, projdc, viz = TRUE)
projMIC <- function(x, viz = FALSE) {
projcoord <- projfun(x["alpha"], x["beta"], x["gamma"])
if(viz) {
plot(projcoord)
Sys.sleep(0.1)
}
-minerva::mine(projcoord[, 1], projcoord[, 2])$MIC
}
apply(pargrid[1:30,], 1, projdc, viz = TRUE)
projMIC <- function(x, viz = FALSE) {
projcoord <- projfun(x["alpha"], x["beta"], x["gamma"])
if(viz) {
plot(projcoord)
Sys.sleep(0.1)
}
-minerva::mine(projcoord[, 1], projcoord[, 2])$MIC
}
apply(pargrid[1:30,], 1, projdc, viz = TRUE)
projMIC <- function(x, viz = FALSE) {
projcoord <- projfun(x["alpha"], x["beta"], x["gamma"])
if(viz) {
plot(projcoord)
Sys.sleep(0.1)
}
-minerva::mine(projcoord[, 1], projcoord[, 2])$MIC
}
apply(pargrid[1:30,], 1, projMIC, viz = TRUE)
df=randu
df=as.data.frame(randu)
#-------------------------------------------------------------
#2, feladat
plot(x=df$x, y=df$y)
plot(x=df$x, y=df$z)
plot(x=df$y, y=df$z)
df=randu
data(ranDU)
data("randu")
str(randu)
#-------------------------------------------------------------
#2, feladat
plot(x=df$x, y=df$y)
plot(x=df$x, y=df$z)
plot(x=df$y, y=df$z)
#-------------------------------------------------------------
#3, feladat
#síkok ábrázolása
par(mfrow=c(3,1))
plot(x=df$x, y=df$y)
plot(x=df$x, y=df$z)
plot(x=df$y, y=df$z)
#ábrázolás 3D-ben
plot3d(df$x, df$y, df$z, col = "blue", size = 2, type = "s", main = "3D Scatter Plot")
#ábrázolás 3D-ben
rgl::plot3d(df$x, df$y, df$z, col = "blue", size = 2, type = "s", main = "3D Scatter Plot")
#-------------------------------------------------------------
#5, feladat
#a,
projfun <- function(alpha, beta, gamma) {
alpha <- alpha / 180 * pi
beta <- beta / 180 * pi
gamma <- gamma / 180 * pi
Rz <- matrix(c(cos(alpha), sin(alpha), 0, -sin(alpha),
cos(alpha), 0, 0, 0, 1), 3)
Ry <- matrix(c(cos(beta), 0, -sin(beta), 0, 1, 0,
sin(beta), 0, cos(beta)), 3)
Rx <- matrix(c(1, 0, 0, 0, cos(gamma), sin(gamma), 0,
-sin(gamma), cos(gamma)), 3)
R <- Rz %*% Ry %*% Rx
t((R %*% t(randu))[1:2,])
}
vetulet=projfun(0,0,0)
randu
str(randu)
randu%*%c(1, 2, 3)
t(randu)%*%c(1, 2, 3)
t(randu)%*%rnorm(400)
str(t(randu))
#vetulet ábrázolása
plot(x=vetulet[,1], y=vetulet[,2])
dev.off()
vetulet=projfun(350,45,30)
#vetulet ábrázolása
plot(x=vetulet[,1], y=vetulet[,2])
vetulet=projfun(35,345,35)
#vetulet ábrázolása
plot(x=vetulet[,1], y=vetulet[,2])
alpha=seq(0,360,10)
beta=seq(0,360,10)
gamma=seq(0,360,10)
forgatasok=expand.grid(x=alpha, y=beta, z=gamma)
colnames(forgatasok)
korrelaciok=data.frame(elemszam=1:length(forgatasok$alpha),
alpha=forgatasok$alpha,
beta=forgatasok$beta,
gamma=forgatasok$gamma,
korrel=0)
korrelaciok=data.frame(elemszam=1:length(forgatasok$alpha),
alpha=forgatasok$alpha,
beta=forgatasok$beta,
gamma=forgatasok$gamma,
korrel=0)
korrelaciok=data.frame(elemszam=1:length(forgatasok$alpha),
alpha=forgatasok$alpha,
beta=forgatasok$beta,
gamma=forgatasok$gamma)
colnames(forgatasok)=c("alpha","beta","gamma")
korrelaciok=data.frame(elemszam=1:length(forgatasok$alpha),
alpha=forgatasok$alpha,
beta=forgatasok$beta,
gamma=forgatasok$gamma,
korrel=0)
#csak próbáljunk ki egy MIC mutatót
library(minerva)
proba_vetulet=projfun(10,0,0)
mine(x=proba_vetulet[,1],y=proba_vetulet[,2])$MIC
??moran.test
install.packages(c("cli", "data.table", "estmeansd", "fansi", "igraph", "matrixStats", "pkgbuild", "pkgsearch", "ragg", "recipes", "s2", "sandwich", "stringi", "ucminf", "yaml"))
install.packages(c("cli", "data.table", "estmeansd", "fansi", "igraph", "matrixStats", "pkgbuild", "pkgsearch", "ragg", "recipes", "s2", "sandwich", "stringi", "ucminf", "yaml"))
install.packages(c("cli", "data.table", "estmeansd", "fansi", "igraph", "matrixStats", "pkgbuild", "pkgsearch", "ragg", "recipes", "s2", "sandwich", "stringi", "ucminf", "yaml"))
install.packages(c("cli", "data.table", "estmeansd", "fansi", "igraph", "matrixStats", "pkgbuild", "pkgsearch", "ragg", "recipes", "s2", "sandwich", "stringi", "ucminf", "yaml"))
install.packages(c("cli", "data.table", "estmeansd", "fansi", "igraph", "matrixStats", "pkgbuild", "pkgsearch", "ragg", "recipes", "s2", "sandwich", "stringi", "ucminf", "yaml"))
install.packages(c("cli", "data.table", "estmeansd", "fansi", "igraph", "matrixStats", "pkgbuild", "pkgsearch", "ragg", "recipes", "s2", "sandwich", "stringi", "ucminf", "yaml"))
install.packages(c("cli", "data.table", "estmeansd", "fansi", "igraph", "matrixStats", "pkgbuild", "pkgsearch", "ragg", "recipes", "s2", "sandwich", "stringi", "ucminf", "yaml"))
setwd("~/Egyetem/Kutatas/Egyeb/HelyreigazitasFigyelo/eles/")
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas <- fread("cimke_helyreigazitas.csv", dec = ",")
RawDataCimkeHelyreigazitas[CimkeID==69]
RawDataCimkeHelyreigazitas[CimkeID==55]
RawDataHelyreigazitasok[HelyreigazitasID==52]
RawDataHelyreigazitasok[HelyreigazitasID==53]
RawDataHelyreigazitasok[HelyreigazitasID==38]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas[CimkeID==6]
RawDataCimkeHelyreigazitas[CimkeID==97]
RawDataHelyreigazitasok[HelyreigazitasID==4]
RawDataHelyreigazitasok[HelyreigazitasID==86]
RawDataHelyreigazitasok[HelyreigazitasID==1186]
RawDataHelyreigazitasok[HelyreigazitasID==72]
RawDataHelyreigazitasok[HelyreigazitasID==693]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas[CimkeID==80]
RawDataCimkeHelyreigazitas[CimkeID==111]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas[CimkeID==65]
RawDataCimkeHelyreigazitas[CimkeID==127]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas[CimkeID==106]
RawDataCimkeHelyreigazitas[CimkeID==172]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas[CimkeID==64]
RawDataCimkeHelyreigazitas[CimkeID==221]
RawDataCimkeHelyreigazitas[CimkeID==49]
RawDataHelyreigazitasok[HelyreigazitasID==49]
RawDataHelyreigazitasok[HelyreigazitasID==896]
RawDataHelyreigazitasok[HelyreigazitasID==897]
RawDataHelyreigazitasok[HelyreigazitasID==168]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas[CimkeID==227]
RawDataCimkeHelyreigazitas[CimkeID==237]
RawDataHelyreigazitasok[HelyreigazitasID==172]
RawDataHelyreigazitasok[HelyreigazitasID==181]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas[CimkeID==56]
RawDataCimkeHelyreigazitas[CimkeID==315]
RawDataHelyreigazitasok[HelyreigazitasID==39]
RawDataHelyreigazitasok[HelyreigazitasID==1258]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas[CimkeID==444]
RawDataCimkeHelyreigazitas[CimkeID==521]
RawDataHelyreigazitasok[HelyreigazitasID==426]
RawDataHelyreigazitasok[HelyreigazitasID==583]
RawDataHelyreigazitasok[HelyreigazitasID==577]
RawDataHelyreigazitasok[HelyreigazitasID==545]
RawDataHelyreigazitasok[HelyreigazitasID==549]
RawDataHelyreigazitasok[HelyreigazitasID==577]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas[CimkeID==90]
RawDataCimkeHelyreigazitas[CimkeID==615]
RawDataHelyreigazitasok[HelyreigazitasID==68]
RawDataHelyreigazitasok[HelyreigazitasID==683]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas[CimkeID==142]
RawDataCimkeHelyreigazitas[CimkeID==655]
RawDataHelyreigazitasok[HelyreigazitasID==100]
RawDataHelyreigazitasok[HelyreigazitasID==76]
RawDataHelyreigazitasok[HelyreigazitasID==761]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
RawDataCimkeHelyreigazitas[CimkeID==683]
RawDataCimkeHelyreigazitas[CimkeID==479]
RawDataCimkeHelyreigazitas[CimkeID==483]
RawDataHelyreigazitasok[HelyreigazitasID==491]
RawDataHelyreigazitasok[HelyreigazitasID==493]
RawDataCimkeHelyreigazitas[CimkeID==683]
RawDataHelyreigazitasok[HelyreigazitasID==803]
RawDataCimkeHelyreigazitas[CimkeID==479]
RawDataCimkeHelyreigazitas[CimkeID==683]
# setwd
library(data.table)
RawDataHelyreigazitasok <- fread("helyreigazitasok.csv", dec = ",")
RawDataCimkek <- fread("cimkek.csv", dec = ",")
RawDataCimkek[duplicated(CimkeSzoveg)]
